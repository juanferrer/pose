<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Pose.Controls">

    <Style TargetType="{x:Type local:KeyButton}">
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17" />
        <Setter Property="IsThreeState" Value="False" />
        <Setter Property="BorderBrush" Value="#aaaaaa" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ToolTip" Value="Click to add a key for this property at the current animation frame." />
        <Setter Property="IsTabStop" Value="False" /> <!-- allow tab button in numericinputbox to jump to the next inputbox, not the KeyButton -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:KeyButton}">
                    <Border Background="Transparent">
                        <Border x:Name="border" Background="Transparent" BorderThickness="0" Margin="2"> <!-- enlarges mouse interaction area, eases aiming :) -->
                            <Path x:Name="Path" Data="M1,0 L2,1 1,2 0,1 Z" StrokeThickness="2" SnapsToDevicePixels="True" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" Stretch="Fill" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#517BBD" />
                            <Setter Property="BorderBrush" Value="#517BBD" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#88aaee" />
                            <Setter Property="BorderBrush" Value="#88aaee" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="#eeeeee" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="#617BBD" />
                            <Setter TargetName="Path" Property="StrokeThickness" Value="2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="#99bbff" />
                            <Setter TargetName="Path" Property="StrokeThickness" Value="2" />
                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="ToolTip" Value="Click to remove the key for this property from the animation." />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="ToolTip" Value="Click to update this key with the changed value." />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>